import os
import bait.util.testing

const ROOT_DIRS := [
	'hello_world',
	// 'loops'
]

const DIRS := [
	'100_doors',
]

fun test_task_inout() {
	tasks := os.dir($FILE)

	runner := testing.InOutRunner{
		check_stdout = true
	}

	// JS backend (default)
	for rd in ROOT_DIRS {
		runner.test_subdirs(os.join_path(tasks, [rd]))
	}
	for d in DIRS {
		runner.test_dir(os.join_path(tasks, [d]))
	}

	// C backend
	runner.cmd_options = '-b c'
	// TODO set skips
	for rd in ROOT_DIRS {
		runner.test_subdirs(os.join_path(tasks, [rd]))
	}
	for d in DIRS {
		runner.test_dir(os.join_path(tasks, [d]))
	}
}
